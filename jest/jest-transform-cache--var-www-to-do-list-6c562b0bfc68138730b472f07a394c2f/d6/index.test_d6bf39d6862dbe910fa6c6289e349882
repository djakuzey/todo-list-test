/* istanbul ignore next */'use strict';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_reactRedux = require('react-redux');
var /* istanbul ignore next */_reactRouter = require('react-router');
var /* istanbul ignore next */_enzyme = require('enzyme');

var /* istanbul ignore next */_index = require('../index'); /* istanbul ignore next */var _index2 = _interopRequireDefault(_index);
var /* istanbul ignore next */_actions = require('../../LanguageProvider/actions');
var /* istanbul ignore next */_LanguageProvider = require('../../LanguageProvider'); /* istanbul ignore next */var _LanguageProvider2 = _interopRequireDefault(_LanguageProvider);

var /* istanbul ignore next */_store = require('../../../store'); /* istanbul ignore next */var _store2 = _interopRequireDefault(_store);
var /* istanbul ignore next */_i18n = require('../../../i18n'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('<LocaleToggle />', function () {
  var store = /* istanbul ignore next */void 0;

  beforeAll(function () {
    store = /* istanbul ignore next */(0, _store2.default)({}, /* istanbul ignore next */_reactRouter.browserHistory);
  });

  it('should render the default language messages', function () {
    var renderedComponent = /* istanbul ignore next */(0, _enzyme.shallow)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactRedux.Provider, /* istanbul ignore next */{ store: store },
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_LanguageProvider2.default, /* istanbul ignore next */{ messages: /* istanbul ignore next */_i18n.translationMessages },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_index2.default, /* istanbul ignore next */null))));



    expect(renderedComponent.contains( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_index2.default, /* istanbul ignore next */null))).toBe(true);
  });

  it('should present the default `en` english language option', function () {
    var renderedComponent = /* istanbul ignore next */(0, _enzyme.mount)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactRedux.Provider, /* istanbul ignore next */{ store: store },
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_LanguageProvider2.default, /* istanbul ignore next */{ messages: /* istanbul ignore next */_i18n.translationMessages },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_index2.default, /* istanbul ignore next */null))));



    expect(renderedComponent.contains( /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'option', /* istanbul ignore next */{ value: 'en' }, /* istanbul ignore next */'en'))).toBe(true);
  });

  describe('mapDispatchToProps', function () {
    describe('onLocaleToggle', function () {
      it('should be injected', function () {
        var dispatch = jest.fn();
        var result = /* istanbul ignore next */(0, _index.mapDispatchToProps)(dispatch);
        expect(result.onLocaleToggle).toBeDefined();
      });

      it('should dispatch changeLocale when called', function () {
        var dispatch = jest.fn();
        var result = /* istanbul ignore next */(0, _index.mapDispatchToProps)(dispatch);
        var locale = 'de';
        var evt = { target: { value: locale } };
        result.onLocaleToggle(evt);
        expect(dispatch).toHaveBeenCalledWith( /* istanbul ignore next */(0, _actions.changeLocale)(locale));
      });
    });
  });
});