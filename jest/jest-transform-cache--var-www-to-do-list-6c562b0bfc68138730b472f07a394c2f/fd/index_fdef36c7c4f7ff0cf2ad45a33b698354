/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.LocaleToggle = undefined;var cov_28zrfb07pp = function () {var path = '/var/www/to do list/app/containers/LocaleToggle/index.js',hash = 'befe49a354ea7b6cd17fb50b5621f28f614e70d1',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/var/www/to do list/app/containers/LocaleToggle/index.js', statementMap: { '0': { start: { line: 20, column: 4 }, end: { line: 24, column: 6 } }, '1': { start: { line: 28, column: 0 }, end: { line: 31, column: 2 } }, '2': { start: { line: 33, column: 24 }, end: { line: 36, column: 1 } }, '3': { start: { line: 35, column: 15 }, end: { line: 35, column: 25 } }, '4': { start: { line: 39, column: 2 }, end: { line: 42, column: 4 } }, '5': { start: { line: 40, column: 29 }, end: { line: 40, column: 69 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 19, column: 2 }, end: { line: 19, column: 3 } }, loc: { start: { line: 19, column: 11 }, end: { line: 25, column: 3 } }, line: 19 }, '1': { name: '(anonymous_1)', decl: { start: { line: 35, column: 2 }, end: { line: 35, column: 3 } }, loc: { start: { line: 35, column: 15 }, end: { line: 35, column: 25 } }, line: 35 }, '2': { name: 'mapDispatchToProps', decl: { start: { line: 38, column: 16 }, end: { line: 38, column: 34 } }, loc: { start: { line: 38, column: 45 }, end: { line: 43, column: 1 } }, line: 38 }, '3': { name: '(anonymous_3)', decl: { start: { line: 40, column: 20 }, end: { line: 40, column: 21 } }, loc: { start: { line: 40, column: 29 }, end: { line: 40, column: 69 } }, line: 40 } }, branchMap: {}, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0 }, b: {}, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();exports.




































mapDispatchToProps = mapDispatchToProps;var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_reactRedux = require('react-redux');var /* istanbul ignore next */_reselect = require('reselect');var /* istanbul ignore next */_Toggle = require('components/Toggle'); /* istanbul ignore next */var _Toggle2 = _interopRequireDefault(_Toggle);var /* istanbul ignore next */_Wrapper = require('./Wrapper'); /* istanbul ignore next */var _Wrapper2 = _interopRequireDefault(_Wrapper);var /* istanbul ignore next */_messages = require('./messages'); /* istanbul ignore next */var _messages2 = _interopRequireDefault(_messages);var /* istanbul ignore next */_i18n = require('../../i18n');var /* istanbul ignore next */_actions = require('../LanguageProvider/actions');var /* istanbul ignore next */_selectors = require('../LanguageProvider/selectors'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} /*

anguageToggle

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  */var LocaleToggle = exports.LocaleToggle = function (_React$PureComponent) {_inherits(LocaleToggle, _React$PureComponent);function LocaleToggle() {_classCallCheck(this, LocaleToggle);return _possibleConstructorReturn(this, (LocaleToggle.__proto__ || Object.getPrototypeOf(LocaleToggle)).apply(this, arguments));}_createClass(LocaleToggle, [{ key: 'render', // eslint-disable-line react/prefer-stateless-function
    value: function render() {/* istanbul ignore next */++cov_28zrfb07pp.f[0];++cov_28zrfb07pp.s[0];return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Wrapper2.default, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Toggle2.default, /* istanbul ignore next */{ value: this.props.locale, values: /* istanbul ignore next */_i18n.appLocales, messages: /* istanbul ignore next */_messages2.default, onToggle: this.props.onLocaleToggle })));} }]);return LocaleToggle;}( /* istanbul ignore next */_react2.default.PureComponent); /* istanbul ignore next */++cov_28zrfb07pp.s[1];LocaleToggle.propTypes = { onLocaleToggle: /* istanbul ignore next */_react2.default.PropTypes.func, locale: /* istanbul ignore next */_react2.default.PropTypes.string };var mapStateToProps = /* istanbul ignore next */(++cov_28zrfb07pp.s[2], /* istanbul ignore next */(0, _reselect.createSelector)( /* istanbul ignore next */(0, _selectors.makeSelectLocale)(), function (locale) {/* istanbul ignore next */++cov_28zrfb07pp.f[1];++cov_28zrfb07pp.s[3];return { locale: locale };}));function mapDispatchToProps(dispatch) {/* istanbul ignore next */++cov_28zrfb07pp.f[2];++cov_28zrfb07pp.s[4];return { onLocaleToggle: function /* istanbul ignore next */onLocaleToggle(evt) {/* istanbul ignore next */++cov_28zrfb07pp.f[3];++cov_28zrfb07pp.s[5];return dispatch( /* istanbul ignore next */(0, _actions.changeLocale)(evt.target.value));}, dispatch: dispatch };} /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LocaleToggle);