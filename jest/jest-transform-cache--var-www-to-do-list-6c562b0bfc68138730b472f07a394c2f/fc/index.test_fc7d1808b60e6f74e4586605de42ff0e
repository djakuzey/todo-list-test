/* istanbul ignore next */'use strict';var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_enzyme = require('enzyme');

var /* istanbul ignore next */_Task = require('../Task'); /* istanbul ignore next */var _Task2 = _interopRequireDefault(_Task);
var /* istanbul ignore next */_index = require('../index');

var /* istanbul ignore next */_actions = require('containers/ToDoList/actions'); /* istanbul ignore next */var actions = _interopRequireWildcard(_actions); /* istanbul ignore next */function _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('<TodoList />', function () {
  var state = /* istanbul ignore next */void 0;
  beforeEach(function () {
    state = [
    {
      id: 0,
      title: 'hello',
      isDone: false,
      subtasks: [{
        id: 5,
        title: 'hello',
        isDone: false }] },



    {
      id: 1,
      title: 'test',
      isDone: true,
      subtasks: [] }];


  });

  it('should render the todo input', function () {
    var renderedComponent = /* istanbul ignore next */(0, _enzyme.mount)(
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_index.TodoList, /* istanbul ignore next */{ tasks: state, actions: actions }));

    expect(renderedComponent.find( /* istanbul ignore next */_Task2.default).length).toBe(1);
  });


});