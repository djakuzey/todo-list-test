/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_155dzg6n62 = function () {var path = '/var/www/to do list/app/containers/FeaturePage/messages.js',hash = '806664fdeb583f1eaf7d5568412b4b13c96ea2f9',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/var/www/to do list/app/containers/FeaturePage/messages.js', statementMap: {}, fnMap: {}, branchMap: {}, s: {}, f: {}, b: {}, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}(); /*
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              * FeaturePage Messages
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              *
his contains all the text for the FeaturePage component.

var /* istanbul ignore next */_reactIntl = require('react-intl'); /* istanbul ignore next */exports.default =

/* istanbul ignore next */(0, _reactIntl.defineMessages)({
  header: {
    id: 'boilerplate.containers.FeaturePage.header',
    defaultMessage: 'Features' },

  scaffoldingHeader: {
    id: 'boilerplate.containers.FeaturePage.scaffolding.header',
    defaultMessage: 'Quick scaffolding' },

  scaffoldingMessage: {
    id: 'boilerplate.containers.FeaturePage.scaffolding.message',
    defaultMessage: /* istanbul ignore next */'Automate the creation of components, containers, routes, selectors\n  and sagas - and their tests - right from the CLI!' },


  feedbackHeader: {
    id: 'boilerplate.containers.FeaturePage.feedback.header',
    defaultMessage: 'Instant feedback' },

  feedbackMessage: {
    id: 'boilerplate.containers.FeaturePage.feedback.message',
    defaultMessage: /* istanbul ignore next */'\n      Enjoy the best DX and code your app at the speed of thought! Your\n    saved changes to the CSS and JS are reflected instantaneously\n    without refreshing the page. Preserve application state even when\n    you update something in the underlying code!\n    ' },






  stateManagementHeader: {
    id: 'boilerplate.containers.FeaturePage.state_management.header',
    defaultMessage: 'Predictable state management' },

  stateManagementMessages: {
    id: 'boilerplate.containers.FeaturePage.state_management.message',
    defaultMessage: /* istanbul ignore next */'\n      Unidirectional data flow allows for change logging and time travel\n    debugging.\n    ' },




  javascriptHeader: {
    id: 'boilerplate.containers.FeaturePage.javascript.header',
    defaultMessage: 'Next generation JavaScript' },

  javascriptMessage: {
    id: 'boilerplate.containers.FeaturePage.javascript.message',
    defaultMessage: /* istanbul ignore next */'Use template strings, object destructuring, arrow functions, JSX\n    syntax and more, today.' },


  cssHeader: {
    id: 'boilerplate.containers.FeaturePage.css.header',
    defaultMessage: 'Features' },

  cssMessage: {
    id: 'boilerplate.containers.FeaturePage.css.message',
    defaultMessage: 'Next generation CSS' },

  routingHeader: {
    id: 'boilerplate.containers.FeaturePage.routing.header',
    defaultMessage: 'Industry-standard routing' },

  routingMessage: {
    id: 'boilerplate.containers.FeaturePage.routing.message',
    defaultMessage: /* istanbul ignore next */'\n      Write composable CSS that\'s co-located with your components for\n    complete modularity. Unique generated class names keep the\n    specificity low while eliminating style clashes. Ship only the\n    styles that are on the page for the best performance.\n    ' },






  networkHeader: {
    id: 'boilerplate.containers.FeaturePage.network.header',
    defaultMessage: 'Offline-first' },

  networkMessage: {
    id: 'boilerplate.containers.FeaturePage.network.message',
    defaultMessage: /* istanbul ignore next */'\n      The next frontier in performant web apps: availability without a\n      network connection from the instant your users load the app.\n    ' },




  intlHeader: {
    id: 'boilerplate.containers.FeaturePage.internationalization.header',
    defaultMessage: 'Complete i18n Standard Internationalization & Pluralization' },

  intlMessage: {
    id: 'boilerplate.containers.FeaturePage.internationalization.message',
    defaultMessage: 'Scalable apps need to support multiple languages, easily add and support multiple languages with `react-intl`.' } });