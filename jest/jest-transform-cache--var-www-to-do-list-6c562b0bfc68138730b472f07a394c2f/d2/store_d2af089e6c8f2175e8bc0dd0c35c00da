/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;}; /**
                                                                                                                                                                                                                                                                                                                                                                                * Create the store with asynchronously loaded reducers
                                                                                                                                                                                                                                                                                                                                                                                */exports.default =









configureStore;var /* istanbul ignore next */_redux = require('redux');var /* istanbul ignore next */_immutable = require('immutable');var /* istanbul ignore next */_reactRouterRedux = require('react-router-redux');var /* istanbul ignore next */_reduxSaga = require('redux-saga'); /* istanbul ignore next */var _reduxSaga2 = _interopRequireDefault(_reduxSaga);var /* istanbul ignore next */_reducers = require('./reducers'); /* istanbul ignore next */var _reducers2 = _interopRequireDefault(_reducers);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var sagaMiddleware = /* istanbul ignore next */(0, _reduxSaga2.default)();function configureStore() {/* istanbul ignore next */var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; /* istanbul ignore next */var history = arguments[1];
  // Create the store with two middlewares
  // 1. sagaMiddleware: Makes redux-sagas work
  // 2. routerMiddleware: Syncs the location/URL path to the state
  var middlewares = [
  sagaMiddleware,
  /* istanbul ignore next */(0, _reactRouterRedux.routerMiddleware)(history)];


  var enhancers = [
  /* istanbul ignore next */_redux.applyMiddleware.apply( /* istanbul ignore next */undefined, middlewares)];


  // If Redux DevTools Extension is installed use it, otherwise use Redux compose
  /* eslint-disable no-underscore-dangle */
  var composeEnhancers =
  process.env.NODE_ENV !== 'production' &&
  /* istanbul ignore next */(typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' &&
  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?
  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : /* istanbul ignore next */_redux.compose;
  /* eslint-enable */

  var store = /* istanbul ignore next */(0, _redux.createStore)(
  /* istanbul ignore next */(0, _reducers2.default)(),
  /* istanbul ignore next */(0, _immutable.fromJS)(initialState),
  /* istanbul ignore next */composeEnhancers.apply( /* istanbul ignore next */undefined, enhancers));


  // Extensions
  store.runSaga = sagaMiddleware.run;
  store.asyncReducers = {}; // Async reducer registry

  // Make reducers hot reloadable, see http://mxs.is/googmo
  /* istanbul ignore next */
  if (module.hot) {
    module.hot.accept('./reducers', function () {
      /* istanbul ignore next */new Promise(function (resolve) {resolve(require('./reducers'));}).then(function (reducerModule) {
        var createReducers = reducerModule.default;
        var nextReducers = createReducers(store.asyncReducers);

        store.replaceReducer(nextReducers);
      });
    });
  }

  return store;
}