/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });exports.HomePage = undefined;var cov_2xpgwa28e = function () {var path = '/var/www/to do list/app/containers/HomePage/index.js',hash = 'e8a59251f2c55b482407e7f894a159744357a93b',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/var/www/to do list/app/containers/HomePage/index.js', statementMap: { '0': { start: { line: 31, column: 4 }, end: { line: 33, column: 5 } }, '1': { start: { line: 32, column: 6 }, end: { line: 32, column: 32 } }, '2': { start: { line: 37, column: 38 }, end: { line: 37, column: 48 } }, '3': { start: { line: 38, column: 27 }, end: { line: 42, column: 5 } }, '4': { start: { line: 44, column: 4 }, end: { line: 84, column: 6 } }, '5': { start: { line: 88, column: 0 }, end: { line: 101, column: 2 } }, '6': { start: { line: 104, column: 2 }, end: { line: 110, column: 4 } }, '7': { start: { line: 105, column: 31 }, end: { line: 105, column: 73 } }, '8': { start: { line: 107, column: 6 }, end: { line: 107, column: 72 } }, '9': { start: { line: 107, column: 51 }, end: { line: 107, column: 72 } }, '10': { start: { line: 108, column: 6 }, end: { line: 108, column: 28 } }, '11': { start: { line: 113, column: 24 }, end: { line: 118, column: 2 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 30, column: 2 }, end: { line: 30, column: 3 } }, loc: { start: { line: 30, column: 22 }, end: { line: 34, column: 3 } }, line: 30 }, '1': { name: '(anonymous_1)', decl: { start: { line: 36, column: 2 }, end: { line: 36, column: 3 } }, loc: { start: { line: 36, column: 11 }, end: { line: 85, column: 3 } }, line: 36 }, '2': { name: 'mapDispatchToProps', decl: { start: { line: 103, column: 16 }, end: { line: 103, column: 34 } }, loc: { start: { line: 103, column: 45 }, end: { line: 111, column: 1 } }, line: 103 }, '3': { name: '(anonymous_3)', decl: { start: { line: 105, column: 22 }, end: { line: 105, column: 23 } }, loc: { start: { line: 105, column: 31 }, end: { line: 105, column: 73 } }, line: 105 }, '4': { name: '(anonymous_4)', decl: { start: { line: 106, column: 18 }, end: { line: 106, column: 19 } }, loc: { start: { line: 106, column: 27 }, end: { line: 109, column: 5 } }, line: 106 } }, branchMap: { '0': { loc: { start: { line: 31, column: 4 }, end: { line: 33, column: 5 } }, type: 'if', locations: [{ start: { line: 31, column: 4 }, end: { line: 33, column: 5 } }, { start: { line: 31, column: 4 }, end: { line: 33, column: 5 } }], line: 31 }, '1': { loc: { start: { line: 31, column: 8 }, end: { line: 31, column: 68 } }, type: 'binary-expr', locations: [{ start: { line: 31, column: 8 }, end: { line: 31, column: 27 } }, { start: { line: 31, column: 31 }, end: { line: 31, column: 68 } }], line: 31 }, '2': { loc: { start: { line: 107, column: 6 }, end: { line: 107, column: 72 } }, type: 'if', locations: [{ start: { line: 107, column: 6 }, end: { line: 107, column: 72 } }, { start: { line: 107, column: 6 }, end: { line: 107, column: 72 } }], line: 107 }, '3': { loc: { start: { line: 107, column: 10 }, end: { line: 107, column: 49 } }, type: 'binary-expr', locations: [{ start: { line: 107, column: 10 }, end: { line: 107, column: 27 } }, { start: { line: 107, column: 31 }, end: { line: 107, column: 49 } }], line: 107 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();exports.





































































































mapDispatchToProps = mapDispatchToProps;var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);var /* istanbul ignore next */_reactHelmet = require('react-helmet'); /* istanbul ignore next */var _reactHelmet2 = _interopRequireDefault(_reactHelmet);var /* istanbul ignore next */_reactIntl = require('react-intl');var /* istanbul ignore next */_reactRedux = require('react-redux');var /* istanbul ignore next */_reselect = require('reselect');var /* istanbul ignore next */_selectors = require('containers/App/selectors');var /* istanbul ignore next */_H = require('components/H2'); /* istanbul ignore next */var _H2 = _interopRequireDefault(_H);var /* istanbul ignore next */_ReposList = require('components/ReposList'); /* istanbul ignore next */var _ReposList2 = _interopRequireDefault(_ReposList);var /* istanbul ignore next */_AtPrefix = require('./AtPrefix'); /* istanbul ignore next */var _AtPrefix2 = _interopRequireDefault(_AtPrefix);var /* istanbul ignore next */_CenteredSection = require('./CenteredSection'); /* istanbul ignore next */var _CenteredSection2 = _interopRequireDefault(_CenteredSection);var /* istanbul ignore next */_Form = require('./Form'); /* istanbul ignore next */var _Form2 = _interopRequireDefault(_Form);var /* istanbul ignore next */_Input = require('./Input'); /* istanbul ignore next */var _Input2 = _interopRequireDefault(_Input);var /* istanbul ignore next */_Section = require('./Section'); /* istanbul ignore next */var _Section2 = _interopRequireDefault(_Section);var /* istanbul ignore next */_messages = require('./messages'); /* istanbul ignore next */var _messages2 = _interopRequireDefault(_messages);var /* istanbul ignore next */_actions = require('../App/actions');var /* istanbul ignore next */_actions2 = require('./actions');var /* istanbul ignore next */_selectors2 = require('./selectors'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;} /*
omePage

his is the first thing users see of our App, at the '/' route
var HomePage = exports.HomePage = function (_React$PureComponent) {_inherits(HomePage, _React$PureComponent);function HomePage() {_classCallCheck(this, HomePage);return _possibleConstructorReturn(this, (HomePage.__proto__ || Object.getPrototypeOf(HomePage)).apply(this, arguments));}_createClass(HomePage, [{ key: 'componentDidMount', // eslint-disable-line react/prefer-stateless-function
    /**
     * when initial state username is not null, submit the form to load repos
     */value: function componentDidMount() {/* istanbul ignore next */++cov_2xpgwa28e.f[0];++cov_2xpgwa28e.s[0];if ( /* istanbul ignore next */(++cov_2xpgwa28e.b[1][0], this.props.username) && /* istanbul ignore next */(++cov_2xpgwa28e.b[1][1], this.props.username.trim().length > 0)) {/* istanbul ignore next */++cov_2xpgwa28e.b[0][0];++cov_2xpgwa28e.s[1];this.props.onSubmitForm();} else /* istanbul ignore next */{++cov_2xpgwa28e.b[0][1];}} }, { key: 'render', value: function render() {/* istanbul ignore next */++cov_2xpgwa28e.f[1];var _ref = (++cov_2xpgwa28e.s[2], this.props),loading = _ref.loading,error = _ref.error,repos = _ref.repos;var reposListProps = /* istanbul ignore next */(++cov_2xpgwa28e.s[3], { loading: loading, error: error, repos: repos }); /* istanbul ignore next */++cov_2xpgwa28e.s[4];return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'article', /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactHelmet2.default, /* istanbul ignore next */{ title: 'Home Page', meta: [{ name: 'description', content: 'A React.js Boilerplate application homepage' }] }), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_CenteredSection2.default, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_H2.default, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */_messages2.default.startProjectHeader)), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */_messages2.default.startProjectMessage))), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Section2.default, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_H2.default, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */_messages2.default.trymeHeader)), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Form2.default, /* istanbul ignore next */{ onSubmit: this.props.onSubmitForm }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'label', /* istanbul ignore next */{ htmlFor: 'username' }, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */_messages2.default.trymeMessage), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_AtPrefix2.default, /* istanbul ignore next */null, /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_reactIntl.FormattedMessage, /* istanbul ignore next */_messages2.default.trymeAtPrefix)), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_Input2.default, /* istanbul ignore next */{ id: 'username', type: 'text', placeholder: 'mxstbr', value: this.props.username, onChange: this.props.onChangeUsername }))), /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_ReposList2.default, reposListProps)))));} }]);return HomePage;}( /* istanbul ignore next */_react2.default.PureComponent); /* istanbul ignore next */++cov_2xpgwa28e.s[5];HomePage.propTypes = { loading: /* istanbul ignore next */_react2.default.PropTypes.bool, error: /* istanbul ignore next */_react2.default.PropTypes.oneOfType([/* istanbul ignore next */_react2.default.PropTypes.object, /* istanbul ignore next */_react2.default.PropTypes.bool]), repos: /* istanbul ignore next */_react2.default.PropTypes.oneOfType([/* istanbul ignore next */_react2.default.PropTypes.array, /* istanbul ignore next */_react2.default.PropTypes.bool]), onSubmitForm: /* istanbul ignore next */_react2.default.PropTypes.func, username: /* istanbul ignore next */_react2.default.PropTypes.string, onChangeUsername: /* istanbul ignore next */_react2.default.PropTypes.func };function mapDispatchToProps(dispatch) {/* istanbul ignore next */++cov_2xpgwa28e.f[2];++cov_2xpgwa28e.s[6];return { onChangeUsername: function /* istanbul ignore next */onChangeUsername(evt) {/* istanbul ignore next */++cov_2xpgwa28e.f[3];++cov_2xpgwa28e.s[7];return dispatch( /* istanbul ignore next */(0, _actions2.changeUsername)(evt.target.value));}, onSubmitForm: function /* istanbul ignore next */onSubmitForm(evt) {/* istanbul ignore next */++cov_2xpgwa28e.f[4];++cov_2xpgwa28e.s[8];if ( /* istanbul ignore next */(++cov_2xpgwa28e.b[3][0], evt !== undefined) && /* istanbul ignore next */(++cov_2xpgwa28e.b[3][1], evt.preventDefault)) {/* istanbul ignore next */++cov_2xpgwa28e.b[2][0];++cov_2xpgwa28e.s[9];evt.preventDefault();} else /* istanbul ignore next */{++cov_2xpgwa28e.b[2][1];}++cov_2xpgwa28e.s[10];dispatch( /* istanbul ignore next */(0, _actions.loadRepos)());} };
}

var mapStateToProps = /* istanbul ignore next */(++cov_2xpgwa28e.s[11], /* istanbul ignore next */(0, _reselect.createStructuredSelector)({
  repos: /* istanbul ignore next */(0, _selectors.makeSelectRepos)(),
  username: /* istanbul ignore next */(0, _selectors2.makeSelectUsername)(),
  loading: /* istanbul ignore next */(0, _selectors.makeSelectLoading)(),
  error: /* istanbul ignore next */(0, _selectors.makeSelectError)() }));


// Wrap the component to inject dispatch and state into it
/* istanbul ignore next */exports.default = /* istanbul ignore next */(0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(HomePage);